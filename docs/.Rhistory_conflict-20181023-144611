knitr::opts_chunk$set(echo = TRUE)
m1 = smooth.spline(datos$age, datos$wage, df = 16)
library(ISLR)
datos = Wage
datos = datos[datos$wage<250,]
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
m1 = smooth.spline(datos$age, datos$wage, df = 16)
summary(m1)
m1 = smooth.spline(datos$age, datos$wage, df = 16)
str(m1)
m1 = smooth.spline(datos$age, datos$wage, df = 16)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
lines(m1, col = "red", lwd = 2)
m1 = smooth.spline(datos$age, datos$wage, df = 16)
m2 = smooth.spline(datos$age, datos$wage, df = 6)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Smoothing splines")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
m1 = smooth.spline(datos$age, datos$wage, df = 26)
m2 = smooth.spline(datos$age, datos$wage, df = 6)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Smoothing splines")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
m1 = smooth.spline(datos$age, datos$wage, df = 20)
m2 = smooth.spline(datos$age, datos$wage, df = 7)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Smoothing splines")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
m1 = smooth.spline(datos$age, datos$wage, df = 20)
m2 = smooth.spline(datos$age, datos$wage, df = 7)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Smoothing splines")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
legend(70,200, legend = c("20 df", "7 df"), col = c("red","blue"))
knitr::opts_chunk$set(echo = TRUE)
(x = 1:10)
set.seed(12345)
n = length(x) # numero de datos
(u1 = rnorm(n, mean = 0, sd = 1))
(y1 = 2 + 0.5*x + u1)
plot(x,y1, col = "red", ylim = c(0,10), pch = 19)
abline(2,0.5, col = "blue", lty = 2)
m1 = lm(y1 ~ x)
plot(x,y1, col = "red", ylim = c(0,10), pch = 19)
abline(2,0.5, col = "blue", lty = 2)
abline(m1, col = "red")
u2 = rnorm(n, mean = 0, sd = 1)
y2 = 2 + 0.5*x + u2
m2 = lm(y2 ~ x)
plot(x,y1, col = "red", ylab = "y", ylim = c(0,10), pch = 19)
points(x,y2, col = "green", pch = 19)
abline(2,0.5, col = "blue", lty = 2)
abline(m1, col = "red")
abline(m2, col = "green")
nmuestras = 1000
beta0 = rep(0, nmuestras)
beta1 = rep(0, nmuestras)
for (k in 1:nmuestras){
u = rnorm(n, mean = 0, sd = 1)
y = 2 + 0.5*x + u
m = lm(y ~ x)
beta0[k] = m$coefficients["(Intercept)"]
beta1[k] = m$coefficients["x"]
}
par(mfrow = c(1,2))
hist(beta0, freq = F)
curve(dnorm(x, mean = mean(beta0), sd = sd(beta0)), add = T)
hist(beta1, freq = F)
curve(dnorm(x, mean = mean(beta1), sd = sd(beta1)), add = T)
c(mean(beta0),sd(beta0))
c(mean(beta1),sd(beta1))
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
datos = Wage
str(datos)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey")
datos = datos[datos$wage<250,]
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey")
m1 = lm(wage ~ age + I(age^2) + I(age^3) + I(age^4), data = datos)
summary(m1)
z1 = datos$age
z2 = datos$age^2
z3 = datos$age^3
z4 = datos$age^4
m2 = lm(wage ~ z1 + z2 + z3 + z4, data = datos)
summary(m2)
m3 = lm(wage ~ poly(age, degree = 4, raw = T), data = datos)
summary(m3)
age_grid = seq(from = min(datos$age), to = max(datos$age), by = 1)
yp = predict(m1, newdata = data.frame(age = age_grid), se = TRUE)
yp1 = yp$fit - 2*yp$se.fit
yp2 = yp$fit + 2*yp$se.fit
plot(wage ~ age, data = datos, xlim = range(age), cex = 0.5, col = "darkgrey")
title("Polinomio de grado 4")
lines(age_grid, yp$fit, lwd = 2, col = "blue")
lines(age_grid, yp1, col = "blue", lty = 3)
lines(age_grid, yp2, col = "blue", lty = 3)
library(leaps)
grado_max = 12
m_best = regsubsets(wage ~ poly(age, degree = grado_max), data = datos, nvmax = grado_max)
m_best_summary = summary(m_best)
plot(m_best_summary$adjr2, xlab = "Grado del polinomio", ylab = "R2 ajustado", type = "b")
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
datos = Wage
datos = datos[datos$wage<250,]
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
library(splines)
dim(bs(datos$age, knots = c(25, 40, 60)))
# por defecto utiliza splines cubicos
dim(bs(datos$age, knots = c(25, 40, 60), degree = 4))
# k = df - 3, se utilizan quantiles
attr(bs(datos$age, df = 6), "knots")
attr(bs(datos$age, df = 6, degree = 4), "knots")
m1 = lm(wage ~ bs(age, knots = c(25, 40, 60)), data = datos)
summary(m1)
age_grid = seq(from = min(datos$age), to = max(datos$age), by = 1)
alfa = 0.05
yp = predict(m1, newdata = data.frame(age = age_grid), se = T)
yp1 = yp$fit + qnorm(alfa/2, mean = 0, sd = 1)*yp$se.fit
yp2 = yp$fit + qnorm(1-alfa/2, mean = 0, sd = 1)*yp$se.fit
plot(datos$age, datos$wage, col = "gray")
lines(age_grid, yp$fit, col = "blue", lwd = 2)
lines(age_grid, yp1, col = "blue", lty = 3)
lines(age_grid, yp2, col = "blue", lty = 3)
dim(bs(datos$age, knots = c(25, 40, 60)))
m2 = lm(wage ~ ns(age, knots = c(25, 40, 60)), data = Wage)
summary(m2)
ypn = predict(m2, newdata = data.frame(age = age_grid), se = T)
ypn1 = ypn$fit + qnorm(alfa/2, mean = 0, sd = 1)*ypn$se.fit
ypn2 = ypn$fit + qnorm(1-alfa/2, mean = 0, sd = 1)*ypn$se.fit
plot(datos$age, datos$wage, col = "gray")
#
lines(age_grid, yp$fit, col = "blue", lwd = 2)
lines(age_grid, yp1, col = "blue", lty = 3)
lines(age_grid, yp2, col = "blue", lty = 3)
#
lines(age_grid, ypn$fit, col = "red", lwd = 2)
lines(age_grid, ypn1, col = "red", lty = 3)
lines(age_grid, ypn2, col = "red", lty = 3)
# numero maximo de escalones
num_max_gdl = 8
r2_adj = rep(0, num_max_gdl)
for (i in 3:num_max_gdl){
m = lm(wage ~ bs(age, df = i), data = datos)
m_summary = summary(m)
r2_adj[i] = m_summary$adj.r.squared
}
plot(3:num_max_gdl, r2_adj[3:num_max_gdl], type = "b")
m1 = smooth.spline(datos$age, datos$wage, df = 20)
m2 = smooth.spline(datos$age, datos$wage, df = 7)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Smoothing splines")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
legend(70,200, legend = c("20 df", "7 df"), col = c(red,blue))
m1 = smooth.spline(datos$age, datos$wage, df = 20)
m2 = smooth.spline(datos$age, datos$wage, df = 7)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Smoothing splines")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
legend(70,200, legend = c("20 df", "7 df"), col = par("red","blue"))
m1 = smooth.spline(datos$age, datos$wage, df = 20)
m2 = smooth.spline(datos$age, datos$wage, df = 7)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Smoothing splines")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
legend(70,200, legend = c("20 df", "7 df"), col = c("red","blue"), lty = 1)
m1 = smooth.spline(datos$age, datos$wage, df = 20)
m2 = smooth.spline(datos$age, datos$wage, df = 7)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Smoothing splines")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
legend(70,200, legend = c("20 df", "7 df"), col = c("red","blue"), lty = 1, lwd = 2)
age_grid = seq(from = min(datos$age), to = max(datos$age), by = 1)
alfa = 0.05
yp = predict(m1, newdata = data.frame(age = age_grid), se = T)
plot(datos$age, datos$wage, col = "gray")
lines(age_grid, yp$fit, col = "blue", lwd = 2)
age_grid = seq(from = min(datos$age), to = max(datos$age), by = 1)
alfa = 0.05
yp = predict(m1, newdata = data.frame(age = age_grid))
plot(datos$age, datos$wage, col = "gray")
lines(age_grid, yp$fit, col = "blue", lwd = 2)
age_grid = seq(from = min(datos$age), to = max(datos$age), by = 1)
alfa = 0.05
yp = predict(m1, newdata = data.frame(age = age_grid), se = T)
yp1 = yp$fit + qnorm(alfa/2, mean = 0, sd = 1)*yp$se.fit
yp2 = yp$fit + qnorm(1-alfa/2, mean = 0, sd = 1)*yp$se.fit
plot(datos$age, datos$wage, col = "gray")
lines(age_grid, yp$fit, col = "blue", lwd = 2)
lines(age_grid, yp1, col = "blue", lty = 3)
age_grid = seq(from = min(datos$age), to = max(datos$age), by = 1)
alfa = 0.05
yp = predict(m1, newdata = data.frame(age = age_grid), se = T)
yp1 = yp$fit + qnorm(alfa/2, mean = 0, sd = 1)*yp$se.fit
yp2 = yp$fit + qnorm(1-alfa/2, mean = 0, sd = 1)*yp$se.fit
plot(datos$age, datos$wage, col = "gray")
lines(age_grid, yp$y, col = "blue", lwd = 2)
plot(datos$age, datos$wage, col = "gray")
lines(yp$x, yp$y, col = "blue", lwd = 2)
age_grid = seq(from = min(datos$age), to = max(datos$age), by = 1)
alfa = 0.05
yp = predict(m1, newdata = data.frame(age = age_grid))
str(yp)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
datos = Wage
datos = datos[datos$wage<250,]
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
m1 = loess(wage ~ age, data = datos, span = 0.2)
m2 = loess(wage ~ age, data = datos, span = 0.5)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Regresión Local")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
legend(70,200, legend = c("20 df", "7 df"), col = c("red","blue"), lty = 1, lwd = 2)
m1 = loess(wage ~ age, data = datos, span = 0.2)
m2 = loess(wage ~ age, data = datos, span = 0.5)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Regresión Local")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
legend(70,200, legend = c("20 df", "7 df"), col = c("red","blue"), lty = 1, lwd = 2)
summary(m1)
m1 = loess(wage ~ age, data = datos, span = 0.2)
m2 = loess(wage ~ age, data = datos, span = 0.5)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Regresión Local")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
legend(70,200, legend = c("20 df", "7 df"), col = c("red","blue"), lty = 1, lwd = 2)
alfa = 0.05
yp1 = predict(m1, newdata = data.frame(age = age_grid), se = T)
yp11 = ypn$fit + qnorm(alfa/2, mean = 0, sd = 1)*ypn$se.fit
yp12 = ypn$fit + qnorm(1-alfa/2, mean = 0, sd = 1)*ypn$se.fit
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
datos = Wage
datos = datos[datos$wage<250,]
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
m1 = loess(wage ~ age, data = datos, span = 0.2)
m2 = loess(wage ~ age, data = datos, span = 0.5)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Regresión Local")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
legend(70,200, legend = c("20 df", "7 df"), col = c("red","blue"), lty = 1, lwd = 2)
alfa = 0.05
yp1 = predict(m1, newdata = data.frame(age = age_grid), se = T)
yp2 = predict(m2, newdata = data.frame(age = age_grid), se = T)
yp11 = ypn$fit + qnorm(alfa/2, mean = 0, sd = 1)*ypn$se.fit
yp12 = ypn$fit + qnorm(1-alfa/2, mean = 0, sd = 1)*ypn$se.fit
yp1 = predict(m1, newdata = data.frame(age = age_grid), se = T)
#
lines(age_grid, yp1$fit, col = "blue", lwd = 2)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
#
lines(age_grid, yp1$fit, col = "blue", lwd = 2)
lines(age_grid, yp11, col = "blue", lty = 3)
lines(age_grid, yp12, col = "blue", lty = 3)
#
lines(age_grid, yp2$fit, col = "red", lwd = 2)
lines(age_grid, yp21, col = "red", lty = 3)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
datos = Wage
datos = datos[datos$wage<250,]
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
m1 = loess(wage ~ age, data = datos, span = 0.2)
m2 = loess(wage ~ age, data = datos, span = 0.5)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Regresión Local")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
legend(70,200, legend = c("20 df", "7 df"), col = c("red","blue"), lty = 1, lwd = 2)
alfa = 0.05
yp1 = predict(m1, newdata = data.frame(age = age_grid), se = T)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
#
lines(age_grid, yp1$fit, col = "blue", lwd = 2)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
datos = Wage
datos = datos[datos$wage<250,]
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
m1 = loess(wage ~ age, data = datos, span = 0.2)
m2 = loess(wage ~ age, data = datos, span = 0.5)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
title("Regresión Local")
lines(m1, col = "red", lwd = 2)
lines(m2, col = "blue", lwd = 2)
legend(70,200, legend = c("20 df", "7 df"), col = c("red","blue"), lty = 1, lwd = 2)
alfa = 0.05
yp1 = predict(m1, newdata = data.frame(age = age_grid), se = T)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
#
lines(age_grid, yp1$fit, col = "blue", lwd = 2)
age_grid = seq(from = min(datos$age), to = max(datos$age), by = 1)
alfa = 0.05
yp1 = predict(m1, newdata = data.frame(age = age_grid), se = T)
yp2 = predict(m2, newdata = data.frame(age = age_grid), se = T)
yp11 = ypn$fit + qnorm(alfa/2, mean = 0, sd = 1)*ypn$se.fit
age_grid = seq(from = min(datos$age), to = max(datos$age), by = 1)
alfa = 0.05
yp1 = predict(m1, newdata = data.frame(age = age_grid), se = T)
yp2 = predict(m2, newdata = data.frame(age = age_grid), se = T)
yp11 = yp1$fit + qnorm(alfa/2, mean = 0, sd = 1)*ypn$se.fit
age_grid = seq(from = min(datos$age), to = max(datos$age), by = 1)
alfa = 0.05
yp1 = predict(m1, newdata = data.frame(age = age_grid), se = T)
yp2 = predict(m2, newdata = data.frame(age = age_grid), se = T)
yp11 = yp1$fit + qnorm(alfa/2)*yp1$se.fit
yp12 = yp1$fit + qnorm(1-alfa/2)*yp1$se.fit
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
#
lines(age_grid, yp1$fit, col = "blue", lwd = 2)
lines(age_grid, yp11, col = "blue", lty = 3)
lines(age_grid, yp12, col = "blue", lty = 3)
#
lines(age_grid, yp2$fit, col = "red", lwd = 2)
lines(age_grid, yp21, col = "red", lty = 3)
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
#
lines(age_grid, yp1$fit, col = "blue", lwd = 2)
lines(age_grid, yp11, col = "blue", lty = 3)
lines(age_grid, yp12, col = "blue", lty = 3)
#
lines(age_grid, yp2$fit, col = "red", lwd = 2)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
datos = Wage
datos = datos[datos$wage<250,]
m1 = loess(wage ~ age, data = datos, span = 0.2)
m2 = loess(wage ~ age, data = datos, span = 0.5)
age_grid = seq(from = min(datos$age), to = max(datos$age), by = 1)
alfa = 0.05
yp1 = predict(m1, newdata = data.frame(age = age_grid), se = T)
yp2 = predict(m2, newdata = data.frame(age = age_grid), se = T)
yp11 = yp1$fit + qnorm(alfa/2)*yp1$se.fit
yp12 = yp1$fit + qnorm(1-alfa/2)*yp1$se.fit
install.packages("gam")
knitr::opts_chunk$set(echo = TRUE)
m2 = lm(wage ~ s(year,4) + ns(age,5) + education, data=Wage)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
datos = Wage
datos = datos[datos$wage<250,]
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
library(splines)
m1 = lm(wage ~ ns(year,4)+ns(age,5)+education,data=Wage)
summary(m1)
library(gam)
par(mfrow=c(1,3))
plot.Gam(m1, se=TRUE, col="red")
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
datos = Wage
datos = datos[datos$wage<250,]
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
library(splines)
m1 = lm(wage ~ ns(year,4)+ns(age,5)+education,data=Wage)
summary(m1)
library(gam)
par(mfrow=c(1,3))
plot.Gam(m1, se=TRUE, col="red")
m2 = lm(wage ~ s(year,4) + ns(age,5) + education, data=Wage)
summary(m2)
m2 = lm(wage ~ s(year,4) + s(age,5) + education, data=Wage)
summary(m2)
par(mfrow=c(1,3))
plot.Gam(m2, se=TRUE, col="red")
m2 = gam(wage ~ s(year,4) + s(age,5) + education, data=Wage)
summary(m2)
par(mfrow=c(1,3))
plot.Gam(m2, se=TRUE, col="red")
m3 = gam(wage ~ year + s(age,5) + education, data=Wage)
summary(m3)
m4 = gam(wage ~ year + lo(age,5) + education, data=Wage)
summary(m4)
m4 = gam(wage ~ year + lo(age,span = 0.7) + education, data=Wage)
summary(m4)
m4 = gam(wage ~ ns(year,5) + lo(age,span = 0.7) + education, data=Wage)
summary(m4)
m4 = gam(wage ~ s(year, df = 4) + lo(age,span = 0.7) + education, data=Wage)
summary(m4)
m4 = gam(wage ~ year + lo(age,span = 0.7) + education, data=Wage)
summary(m4)
source("MSE.R")
pred1 = predict(m1)
MSE1 = MSE(datos$wage, pred1)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
datos = Wage
datos = datos[datos$wage<250,]
plot(datos$age,datos$wage, cex = 0.5, col = "darkgrey", ylab = "wage (x 1000 $)", xlab = "age")
library(splines)
m1 = lm(wage ~ ns(year,4)+ns(age,5)+education,data=Wage)
summary(m1)
library(gam)
par(mfrow=c(1,3))
plot.Gam(m1, se=TRUE, col="red")
m2 = gam(wage ~ s(year,4) + s(age,5) + education, data=Wage)
summary(m2)
par(mfrow=c(1,3))
plot.Gam(m2, se=TRUE, col="red")
m3 = gam(wage ~ year + s(age,5) + education, data=Wage)
summary(m3)
m4 = gam(wage ~ year + lo(age,span = 0.7) + education, data=Wage)
summary(m4)
source("MSE.R")
pred1 = predict(m1)
MSE1 = MSE(datos$wage, pred1)
source("MSE.R")
pred1 = predict(m1, newdata = datos)
MSE1 = MSE(datos$wage, pred1)
paste0("m",1)
source("MSE.R")
MSEi = numeric(5)
for (i in 1:5){
predi = predict(paste0("m",i), newdata = datos)
MSEi[i] = MSE(datos$wage, predi)
}
call("m1")
eval("m1")
expression("m1")
quote("m1")
source("MSE.R")
MSEi = numeric(5)
for (i in 1:5){
predi = predict(noquote(paste0("m",i)), newdata = datos)
MSEi[i] = MSE(datos$wage, predi)
}
source("MSE.R")
MSEi = numeric(5)
for (i in 1:5){
predi = predict(as.name(paste0("m",i)), newdata = datos)
MSEi[i] = MSE(datos$wage, predi)
}
source("MSE.R")
MSEi = numeric(5)
for (i in 1:5){
predi = predict(print(paste0("m",i), quote = F), newdata = datos)
MSEi[i] = MSE(datos$wage, predi)
}
source("MSE.R")
model = list(m1,m2,m3,m4,m5)
source("MSE.R")
model = list(m1,m2,m3,m4)
MSEi = numeric(4)
for (i in 1:4){
predi = predict(model[[i]], quote = F), newdata = datos)
source("MSE.R")
model = list(m1,m2,m3,m4)
MSEi = numeric(4)
for (i in 1:4){
predi = predict(model[[i]], newdata = datos)
MSEi[i] = MSE(datos$wage, predi)
}
pred1 = predict(m1, newdata = datos)
MSE1 = MSE(datos$wage, pred1)
source("MSE.R")
model = list(m1,m2,m3,m4)
MSEi = numeric(4)
for (i in 1:4){
predi = predict(model[[i]], newdata = datos)
MSEi[i] = MSE(datos$wage, predi)
}
MSEi
source("MSE.R")
model = list(m1,m2,m3,m4)
MSEi = numeric(4)
for (i in 1:4){
predi = predict(model[[i]], newdata = datos)
MSEi[i] = MSE(datos$wage, predi)
}
MSEi
plot(MSEi, type = "b")
source("MSE.R")
model = list(m1,m2,m3,m4)
MSEi = numeric(4)
for (i in 1:4){
predi = predict(model[[i]], newdata = datos)
MSEi[i] = MSE(datos$wage, predi)
}
plot(MSEi, type = "b")
source("MSE.R")
model = list(m1,m2,m3,m4)
MSEi = numeric(4)
for (i in 1:4){
predi = predict(model[[i]], newdata = datos)
MSEi[i] = MSE(datos$wage, predi)
}
plot(1:4,MSEi, type = "b")
source("MSE.R")
model = list(m1,m2,m3,m4)
MSEi = numeric(4)
for (i in 1:4){
predi = predict(model[[i]], newdata = datos)
MSEi[i] = MSE(datos$wage, predi)
}
plot(MSEi, type = "b")
install.packages("tree")
install.packages("rpart")
install.packages("rpart.plot")
